install('cobble.target.c')
install('objcopy')

warnings = ['-W' + w for w in [
  'all',
  'error',

  'cast-align',
  'cast-qual',
  'conversion',
  'missing-declarations',
  'missing-field-initializers',
  'pointer-arith',
  'redundant-decls',
  'sign-compare',
  'sizeof-pointer-memaccess',
  'switch-enum',
  'undef',
  'zero-as-null-pointer-constant',

  'no-maybe-uninitialized',
]]

environment('native', contents = {
  'arch': 'native',

  'cc': 'ccache gcc',
  'cxx': 'ccache g++',
  'aspp': 'ccache gcc',
  'ar': 'ccache ar',

  'c_flags': warnings + [
    '-m32',
    '-I%(ROOT)s',
    '-g3',
    '-Os',
    '-std=gnu99',
    '-fno-common',
  ],
  'cxx_flags': warnings + [
    '-m32',
    '-I%(ROOT)s',
    '-g3',
    '-Os',
    '-std=gnu++11',
    '-fno-common',
  ],
  'aspp_flags': ['-m32', '-g3'],
  'link_flags': [
    '-m32',
    '-g3',
  ],
})

stm32f407_c_flags = warnings + [
  '-mcpu=cortex-m4',
  '-mthumb',
  '-fno-exceptions',
  '-g3',
  '-Os',
  '-std=gnu++11',
  '-fno-common',
  '-ffunction-sections',
  '-fdata-sections',
  '-ffreestanding',
  '-nostdlib',
  '-nodefaultlibs',
]

environment('stm32f407', contents = {
  'arch': 'target',

  'cc': 'ccache arm-none-eabi-gcc',
  'cxx': 'ccache arm-none-eabi-g++',
  'aspp': 'ccache arm-none-eabi-gcc',
  'ar': 'ccache arm-none-eabi-ar',
  'objcopy': 'arm-none-eabi-objcopy',

  'c_flags': stm32f407_c_flags,
  'cxx_flags': stm32f407_c_flags + [
    '-fno-rtti',
  ],
  'aspp_flags': stm32f407_c_flags,
  'link_flags': stm32f407_c_flags + [
    '-Wl,--gc-sections',
  ],

  'linker_script': '%(ROOT)s/demo/demo-stm32f4xx.ld',
})

environment('stm32f407_kernel', base = 'stm32f407', contents = {
  'cxx_flags': [
    '-I%(ROOT)s',
    '-I%(ROOT)s/k',
    '-I%(ROOT)s/common',
  ],
  'aspp_flags': [
    '-I%(ROOT)s',
    '-I%(ROOT)s/k',
  ],
})

environment('stm32f407_app', base = 'stm32f407', contents = {
  'cxx_flags': [
    '-I%(ROOT)s',
    '-I%(ROOT)s/demo',
    '-I%(ROOT)s/common',
  ],
  'aspp_flags': [
    '-I%(ROOT)s',
    '-I%(ROOT)s/k',
  ],
})

seed('//sim')
seed('//demo')
